Roadmap
=======

* Add ARB and other core OpenGL extensions
* Write comprehensive API documentation
* Create more example code
* Support all pixelstore modes (currently forced to default values by
  any function getting/setting data affected by it)
* Add direct mapping on ruby types for vertex arrays, buffers and image data to allow
  high performance data operations from within ruby (currently data has to be converted to/from string when being passed to OpenGL and so does not allow fast in-place modifications)
	- this should be modeled after Perl's OpenGL::Array
* Add image handling wrapper for easy image handling (textures,screenshots) using RMagick (ImageMagick) - this may not be needed as API as using RMagick to do this stuff is trivial, maybe writing usage guide as part of tutorial is better alternative

Possible Features
========
* Add **all** OpenGL extensions (some are obsolete or not really used or useful at all)
* Support for r/w VBO buffer mapping - gl(Un)MapBuffer (is it needed?)

<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
